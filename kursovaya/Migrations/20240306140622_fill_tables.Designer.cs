// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rlf.Data;

#nullable disable

namespace rlf.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20240306140622_fill_tables")]
    partial class fill_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("rlf.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Доходы",
                            Desc = "Получил"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Расходы",
                            Desc = "Потратил"
                        });
                });

            modelBuilder.Entity("rlf.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("rlf.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Desc = "что-то",
                            Name = "Траты в ###",
                            Sum = 3000,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            Desc = "что-то",
                            Name = "Траты в ###",
                            Sum = 11100,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 1,
                            Desc = "что-то",
                            Name = "Траты в ###",
                            Sum = 15300,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 2,
                            Desc = "что-то",
                            Name = "Траты в ###",
                            Sum = 12300,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 1,
                            Desc = "что-то",
                            Name = "Траты в ###",
                            Sum = 1500,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 2,
                            Desc = "что-то",
                            Name = "Траты в ###",
                            Sum = 10200,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("rlf.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin",
                            Login = "admin",
                            Password = "10713417811525552252225157107128782559063877117316423416247297319230822211831359175",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@user",
                            Login = "user",
                            Password = "10713417811525552252225157107128782559063877117316423416247297319230822211831359175",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("rlf.Data.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfResidence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin Name",
                            NickName = "AdminNick",
                            Phone = "123456789",
                            PlaceOfResidence = "Admin's Residence",
                            TimeZone = "MSK+4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "User Name",
                            NickName = "UserNick",
                            Phone = "987654321",
                            PlaceOfResidence = "User's Residence",
                            TimeZone = "MSK+5",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("rlf.Data.Models.Transaction", b =>
                {
                    b.HasOne("rlf.Data.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rlf.Data.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("rlf.Data.Models.User", b =>
                {
                    b.HasOne("rlf.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("rlf.Data.Models.UserProfile", b =>
                {
                    b.HasOne("rlf.Data.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("rlf.Data.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("rlf.Data.Models.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("rlf.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("rlf.Data.Models.User", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("UserProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
